type CollectionMovie implements Collection {
  id: UUID!
  title: String!
  type: String!
  trailers: VideosConnection
}

interface Collection {
  id: UUID!
  title: String!
  type: String!
}

"""
A universally unique identifier as defined by [RFC 4122](https://tools.ietf.org/html/rfc4122).
"""
scalar UUID

"""A connection to a list of `Video` values."""
type VideosConnection {
  """A list of `Video` objects."""
  nodes: [Video]!

  """
  A list of edges which contains the `Video` and cursor to aid in pagination.
  """
  edges: [VideosEdge]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!
}

type Video {
  id: UUID!
  collectionId: UUID!
  url: String!
  type: String!

  """Reads a single `Collection` that is related to this `Video`."""
  collection: Collection
}

"""A `Video` edge in the connection."""
type VideosEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Video` at the end of the edge."""
  node: Video
}

"""A location in a connection that can be used for resuming pagination."""
scalar Cursor

"""Information about pagination in a connection."""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: Cursor

  """When paginating forwards, the cursor to continue."""
  endCursor: Cursor
}

type CollectionSeason implements Collection {
  id: UUID!
  title: String!
  type: String!
  countSeasons: Int
  countEpisodes: Int
  episodes: VideosConnection
  trailers: VideosConnection
}

"""The root query type which gives access points into the data universe."""
type Query {
  collections: CollectionsConnection
}

"""A connection to a list of `Collection` values."""
type CollectionsConnection {
  """A list of `Collection` objects."""
  nodes: [Collection]!

  """
  A list of edges which contains the `Collection` and cursor to aid in pagination.
  """
  edges: [CollectionsEdge]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!
}

"""A `Collection` edge in the connection."""
type CollectionsEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `Collection` at the end of the edge."""
  node: Collection
}
